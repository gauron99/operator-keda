name: git diff dynamic jobs
on: pull_request

jobs:
  setup:
    runs-on: ubuntu-latest
    outputs:
      new_files: ${{ steps.setup-id.outputs.new_files }}
      old_files: ${{ steps.setup-id.outputs.old_files }}
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Setup dirs for diff
        id: setup-id
        run: |
          cd keda/
          DIRS=$(ls|tail -2)
          dirs=($DIRS)
          dir_old_list=$(find ${dirs[0]} -print)
          dir_new_list=$(find ${dirs[1]} -print)
          root=$(pwd)

          for file in $dir_old_list
          do 
            f=$root"/"$file
            if [ -f "$f" ]; then
              old_files="$old_files $file"
            fi
          done

          new_files+="{\"new\":["
          for file in $dir_new_list
          do 
            f=$root"/"$file
            if [ -f "$f" ]; then
              new_files+="\"$file\""
              le=($dir_new_list)
              if [ "$file" != "${le[-1]}" ]; then
                new_files+=","
              fi
            fi
          done
          new_files+="]}"
          
          echo $old_files
          echo $new_files          

          echo "::set-output name=new_files::$new_files"
          echo "::set-output name=old_files::$old_files"

  diff:
    name: Diff files
    needs: setup
    runs-on: ubuntu-latest

    strategy:
      matrix: ${{fromJSON(needs.setup.outputs.new_files)}}

    env:
      of: ${{ needs.setup.outputs.old_files }}
    
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: make diff ${{matrix.new}}
        id: diff-id
        run: |
          regex=$(echo ${{matrix.new}} | sed 's/^[^\/]*\///')
          #TODO REMOVE THIS -- check old_file length instead
          bool_test=false
          old_file=""
          for old in $of
          do
            if [[ "$regex" == *"$old" ]]; then
              bool_test=true
              old_file=$old
              break
            fi
          done

          diff_text=""
          if [ "$bool_test" = true ]; then  
            if diff_text="$(diff --color -br --unified=0 ${{matrix.new}} $old_file)" && [ $? -ne 1 ]; then
              if [ $? -e 2 ]; then
                echo "exit code of diff is 2 which means trouble"
                exit 1;
              fi
              diff_text="";
            else
              PREFIX=$'<details>\n```diff\n\n'
              POSTFIX=$'\n\n```\n</details>'
              diff_text="${PREFIX}${diff_text}${POSTFIX}"
              if [ ${#diff_text} -ge 65536 ]; then
                diff_text="Character limit 65536 exceeded for this comment"
              fi
            fi
          else
            diff_text="File ${{matrix.new}} is new file completely and wasn't found in previous version"
          fi
          echo "::set-output name=body::$diff_text"
          echo "::set-output name=old_file::$old_file"

      - name: Create comment
        uses: peter-evans/create-or-update-comment@v2
        with:
          issue-number: ${{ github.event.pull_request.number }}
          # max character length is 65536 (2022/10/06)
          body: |
            Git diff ${{matrix.new}} & ${{steps.diff-id.outputs.old_file}}
            ${{ steps.diff-id.outputs.body}}  
          reactions: rocket
      